# The purpose of this program is to stream video with a dynamic text overlay simulating welding parameters
# that will later be obtained from an instrumentation module.

# RPi peripherals imports
import picamera

# Time/Sleep imports
from time import sleep
import datetime as dt

# Networking imports
import socket
import subprocess

# Excel imports
import openpyxl

# Table imports
from astropy.table import Table, Column
import numpy as np

# Open up welding parameter data worksheet
wb = openpyxl.load_workbook('/home/pi/Downloads/WeldingParameters.xlsx')
ws = wb["MIG"]

# Initialize table
t = Table(names = ('Material', 'Thickness (mm)', 'Transfer Type', 'Current Low (A)', 'Current High (A)', 'Shielding Gas',
    'Voltage Range (V)', 'Thin Wire (mm)', 'Thin WFS (ipm)', 'Thick Wire (mm)', 'Thick WFS (ipm)', 'ID'))



for r in range(5, 38):
    for c in range(4, 15):
        cellStr = ws.cell(row = r, column = c)
        #currentTable =




#
print('waiting for connection')

with picamera.PiCamera() as camera:
    camera.resolution = (1280, 720)
    camera.framerate = 24

    server_socket = socket.socket()
    server_socket.bind(('0.0.0.0', 8000))
    server_socket.listen(0)

    # Accept a single connection and make a file-like object out of it
    connection = server_socket.accept()[0].makefile('w')
    print('initial connection made')
    try:
        print('stream starting')
        camera.start_recording(connection, format='h264')
        str1 = "I = 5A D = 3cm V = 5cm/s"
        camera.annotate_text = (str1)
        camera.wait_recording(600)
        camera.stop_recording()
    finally:
        connection.close()
        server_socket.close()
        print('stream ending')